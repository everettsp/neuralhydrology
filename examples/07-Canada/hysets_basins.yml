# --- Experiment configurations --------------------------------------------------------------------

# experiment name, used as folder name
experiment_name: corrected_forcings_nse

# files to specify training, validation and test basins (relative to code root or absolute path)
train_basin_file: 256_clustered_basins.txt
validation_basin_file: 256_clustered_basins.txt
test_basin_file: 256_clustered_basins.txt

# training, validation and test time periods (format = 'dd/mm/yyyy')
train_start_date: "01/10/1982"
train_end_date: "30/09/2010"
validation_start_date: "01/10/1994"
validation_end_date: "30/09/2006"
test_start_date: "01/10/2006"
test_end_date: "30/09/2018"

# which GPU (id) to use [in format of cuda:0, cuda:1 etc, or cpu or None]
device: cuda:0

# --- Validation configuration ---------------------------------------------------------------------

# specify after how many epochs to perform validation
validate_every: 10

# specify how many random basins to use for validation
validate_n_random_basins: 8

# specify which metrics to calculate during validation (see neuralhydrology.evaluation.metrics)
# this can either be a list or a dictionary. If a dictionary is used, the inner keys must match the name of the
# target_variable specified below. Using dicts allows for different metrics per target variable.
metrics:
  - NSE
  - KGE
  - PI

# --- Model configuration --------------------------------------------------------------------------

# base model type [lstm, ealstm, cudalstm, embcudalstm, mtslstm]
# (has to match the if statement in modelzoo/__init__.py)
model: cudalstm

# prediction head [regression]. Define the head specific parameters below
head: regression

# ----> Regression settings <----
output_activation: linear

# ----> General settings <----

# Number of cell states of the LSTM
hidden_size: 128

# Initial bias value of the forget gate
initial_forget_bias: 3

# Dropout applied to the output of the LSTM
output_dropout: 0.4

# --- Training configuration -----------------------------------------------------------------------

# specify optimizer [Adam]
optimizer: Adam

# specify loss [MSE, NSE, RMSE]
loss: NSE

# specify learning rates to use starting at specific epochs (0 is the initial learning rate)
learning_rate:
  0: 1e-3
  10: 5e-4
  20: 1e-4

# Mini-batch size
batch_size: 256

# Number of training epochs
epochs: 128

# If a value, clips the gradients during training to that norm.
clip_gradient_norm: 1

# Defines which time steps are used to calculate the loss. Can't be larger than seq_length.
# If use_frequencies is used, this needs to be a dict mapping each frequency to a predict_last_n-value, else an int.
predict_last_n: 1

# Length of the input sequence
# If use_frequencies is used, this needs to be a dict mapping each frequency to a seq_length, else an int.
seq_length: 365

# Number of parallel workers used in the data pipeline
num_workers: 8

# Log the training loss every n steps
log_interval: 5

# If true, writes logging results into tensorboard file
log_tensorboard: True

# If a value and greater than 0, logs n random basins as figures during validation
log_n_figures: 1

# Save model weights every n epochs
save_weights_every: 1

allow_subsequent_nan_losses: 4

# --- Data configurations --------------------------------------------------------------------------

# which data set to use [camels_us, camels_gb, global, hourly_camels_us]
dataset: hysets

# Path to data set root
data_dir: F:\Data\LSH\HYSETS_2023

# Forcing product [daymet, maurer, maurer_extended, nldas, nldas_extended, nldas_hourly]
# can be either a list of forcings or a single forcing product
forcings:
  - hysets

dynamic_inputs:
  - 2m_dewpoint
  - 2m_tasmax
  - 2m_tasmin
  - 10m_u_component_of_wind
  - 10m_v_component_of_wind
  - evaporation
  - snow_density
  - snow_water_equivalent
  - snow_evaporation
  - snowfall
  - snowmelt
  - surface_net_solar_radiation
  - surface_net_thermal_radiation
  - surface_pressure
  - surface_downwards_solar_radiation
  - surface_downwards_thermal_radiation
  - total_cloud_cover
  - total_precipitation

# which columns to use as target
target_variables:
  - discharge

# clip negative predictions to zero for all variables listed below. Should be a list, even for single variables.
clip_targets_to_zero:
  - discharge

static_attributes:
  - Drainage_Area_km2
  - Elevation_m
  - Slope_deg
  - Gravelius
  - Perimeter
  - Aspect_deg
  - Land_Use_Forest_frac
  - Land_Use_Grass_frac
  - Land_Use_Wetland_frac
  - Land_Use_Water_frac
  - Land_Use_Urban_frac
  - Land_Use_Shrubs_frac
  - Land_Use_Crops_frac
  - Land_Use_Snow_Ice_frac
  - Permeability_logk_m2
  - Porosity_frac
  - p_mean
  - precip_high
  - precip_mean_monthly
  - precip_mean_annual
  - high_prec_freq
  - high_prec_dur
  - low_prec_freq
  - low_prec_dur
  - p_seasonality
  - q_mean
  - q_high
  - q_low
  - high_q_freq
  - high_q_dur
  - low_q_dur
  - zero_q_freq
  - q95
  - q5
  - runoff_ratio
  - pet_mean
  - aridity
  - frac_snow
  - temp_mean

use_basin_id_encoding: True